# 1단계: Gradle을 이용해 빌드
FROM gradle:8.5.0-jdk17-alpine AS build

WORKDIR /app

# Gradle 설정 파일들을 Docker 이미지 안으로 복사
COPY gradlew .
COPY gradle gradle
COPY build.gradle .
COPY settings.gradle .

# 소스 코드를 Docker 이미지 안으로 복사
COPY src src

RUN chmod +x ./gradlew

# 빌드 수행
RUN ./gradlew bootJar

# 2단계: Java Runtime 이미지 안에 빌드 결과물을 넣어 실행
FROM openjdk:17-alpine

WORKDIR /app

# 빌드 결과물을 이전 단계에서 복사
COPY --from=build /app/build/libs/*.jar /app/back.jar

# 환경 변수 설정
ENV USE_PROFILE=prod

# Health Check 추가
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080/actuator/health || exit 1

# 리소스 요구사항 설정 예시 (실제로 사용할 때는 알맞게 조정 필요)
# resources:
#   requests:
#     memory: "64Mi"
#     cpu: "250m"
#   limits:
#     memory: "128Mi"
#     cpu: "500m"

# 서버 실행
ENTRYPOINT ["java","-jar", "-Djava.security.egd=file:/dev/./urandom","/app/back.jar"]
