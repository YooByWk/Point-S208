

 events {
    worker_connections 1024;
}

http {


		# CORS 설정 추가
		map $http_origin $cors_header {
		    default "";
		    "~^https://localhost:\d+$" "$http_origin";
		    "~^http://localhost:\d+$" "$http_origin";

        "~^https://teams\.microsoft\.com/v2/$" "$http_origin";

		}


    upstream backend-read {
        server  13.125.198.123:8082;
    }
    upstream backend-read {
        server  13.125.198.123:8082;
    }

   upstream cud {
        server 13.125.198.123:8080; # cud 서비스의 백엔드 엔드포인트
   }

    upstream ocr {
        server 13.125.198.123:8000;
    }

    upstream grafana {
        server 13.125.198.123:3000;
    }
    upstream kube-cud{

		   server 192.168.49.2:30373;

    }

    server {
        listen 80;
        server_name k10s208.p.ssafy.io;
        return 301 https://$server_name$request_uri; # HTTP 요청을 HTTPS로 리다이렉트
    }

    server {
        listen 443 ssl;
        server_name k10s208.p.ssafy.io;


        ssl_certificate /etc/ssl/combined.crt;
				ssl_certificate_key /etc/ssl/private.key;


        client_max_body_size 30M;

		    location /basic_status {
        stub_status;
        #allow 127.0.0.1;  # Only allow access from localhost
        #deny all;         # Deny access from all other addresses
        # auth_basic "Admin Access"; # 기본 인증 활성화
        # auth_basic_user_file /path/to/.htpasswd; # 기본 인증 사용자 파일의 경로
		    }

             location / {
                proxy_pass http://localhost:9090/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_redirect off;
            }
          location /prometheus/ {
                      rewrite ^/prometheus(.*) $1 break;

                         proxy_pass http://10.109.218.125; # 또는 http://prometheus-server.<namespace>.svc.cluster.local;
                        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-Forwarded-Proto $scheme;
                        proxy_redirect off;
                    }
         location /kube-cud/ {
            rewrite ^/kube-cud(.*) $1 break;

            proxy_pass http://kube-cud/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
         }

        # 그라파나 프록시
        location /grafana/ {
            rewrite ^/grafana/(.*) /$1 break;

            proxy_pass http://grafana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # ocr 서비스 프록시
        location /ocr/ {
            rewrite ^/ocr(.*) $1 break;
            proxy_pass http://ocr/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;

        }

         # BACKEND 프록시 설정
         location /cud/ {
             rewrite ^/cud(.*) $1 break;
             proxy_pass http://cud/;
             proxy_http_version 1.1;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto $scheme;
             proxy_buffering off;
             proxy_cache off;

               if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors_header;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'application/json; charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
               }


         }


         # BACKEND 프록시 설정
         location /read/ {
             rewrite ^/read(.*) $1 break;
             proxy_pass http://backend-read;
             proxy_http_version 1.1;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto $scheme;
             proxy_buffering off;
             proxy_cache off;
         }

    }

}


