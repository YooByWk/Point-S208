version: '3.8'

services:

  jenkins:
    user: root
    image: junwon1131/jenkins:lts
    build:
      context: ./jenkins
      dockerfile: Dockerfile
    ports:
      - "8081:8080"  # Jenkins 웹 인터페이스 포트
      - "50000:50000"  # Jenkins 에이전트 연결 포트
    volumes:
      - jenkins_home:/var/jenkins_home  # Jenkins 데이터를 저장할 볼륨
      - /var/run/docker.sock:/var/run/docker.sock

  ocr:
    container_name: ocr
    image: junwon1131/s208-ocr:latest
    build:
      context: ./OCR
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    networks:
      - jenkins-network
    # volumes:
      # - /var/jenkins_home/workspace/back-ocr/submodule/secrets.json:/app/secrets.json

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:v2.20.1
    volumes:
      - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
        - jenkins-network
        
  prometheus_nginx_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    ports:
      - "9113:9113"  # Nginx exporter가 노출하는 포트
    networks:
        - jenkins-network
    command:
      - "-nginx.scrape-uri=https://k10s208.p.ssafy.io//basic_status"


        
  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
        - jenkins-network
      
  alertmanager:
    image: prom/alertmanager:v0.21.0
    volumes:
      - /etc/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--web.listen-address=:9093'
    ports:
      - '9093:9093'

  backend-cud:
    container_name: backend-cud
    image: junwon1131/s208-backend-cud:latest
    build:
      context: ./backend-cud
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - jenkins-network
 

  backend-cud-service:
    container_name: backend-cud-service
    image: junwon1131/s208-backend-cud-kubernetes:latest
    build:
      context: ./backend-cud
      dockerfile: Dockerfile.kubernetes
    restart: unless-stopped
    ports:
      - "8081:8081"
    networks:
      - jenkins-network

  backend-read:
    container_name: backend-read
    image: junwon1131/s208-backend-read:latest
    build:
      context: ./backend-read
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8082:8080"
    networks:
      - jenkins-network

networks:
  jenkins-network:
    external: true

volumes:
  jenkins_home:
  prometheus_data:
  grafana_data:
  secrets:
