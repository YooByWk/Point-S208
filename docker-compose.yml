version: '3.8'

services:
 
  # ocr:
  #   container_name: ocr
  #   image: junwon1131/s208-ocr:latest
  #   build:
  #     context: ./OCR
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   ports:
  #     - "8000:8000"
  #   networks:
  #     - jenkins-network
 
  ocr:
    image: junwon1131/s208-ocr:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    ports:
      - "8000:8000"
    networks:
      - jenkins-network

  autoscale-api:
    build: 
      context: ./AutoScale


    ports:
      - "5000:5000"
    environment:
      FLASK_ENV: development
    volumes:
      - .:/app
      
  # backend-cud:
  #   container_name: backend-cud
  #   image: junwon1131/s208-backend-cud:latest
  #   build:
  #     context: ./backend-cud
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - jenkins-network
 
 
  backend-cud:
    image: junwon1131/s208-backend-cud:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    ports:
      - "8080:8080"
    networks:
      - jenkins-network
  
  
  backend-read:
    image: junwon1131/s208-backend-read:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    ports:
      - "8082:8080"
    networks:
      - jenkins-network

  # backend-read:
  #   container_name: backend-read
  #   image: junwon1131/s208-backend-read:latest
  #   build:
  #     context: ./backend-read
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   ports:
  #     - "8082:8080"
  #   networks:
  #     - jenkins-network
       
networks:
  jenkins-network:
    # external: true


volumes:
  jenkins_home:
  prometheus_data:
  grafana_data:
  secrets:
