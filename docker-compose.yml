version: '3.8'

services:
 
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.39.3
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "9091:8080"
    container_name: cadvisor
    restart: always

  prometheus:
    image: prom/prometheus:v2.20.1
    volumes:
      - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /etc/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml

    ports:
      - "9090:9090"
    networks:
        - jenkins-network
        
  prometheus_nginx_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    ports:
      - "9113:9113"  # Nginx exporter가 노출하는 포트
    networks:
        - jenkins-network
    command:
      - "-nginx.scrape-uri=https://k10s208.p.ssafy.io//basic_status"


        
  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
        - jenkins-network
      
  alertmanager:
    image: prom/alertmanager:v0.21.0
    volumes:
      - /etc/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--web.listen-address=:9093'
    ports:
      - '9093:9093'


#  alertmanager:
#    image: prom/alertmanager:v0.22.2
#    ports:
#      - "9093:9093"
#    volumes:
#      - ./alertmanager:/etc/alertmanager
#    command:
#      - '--config.file=/etc/alertmanager/alertmanager.yml'




#
#  nginx:
#    image: junwon1131/s208-nginx:latest
#    container_name: nginx-https
#    build:
#      context: ./backend/nginx
#      dockerfile: Dockerfile
#
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      #      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#      #      - host머신 인증서를 컨테이너 내부로 볼륨매핑.
##      - /etc/letsencrypt/live/j10s208.p.ssafy.io/fullchain.pem:/etc/ssl/openssl.cnf
##      - /etc/letsencrypt/live/j10s208.p.ssafy.io/privkey.pem:/etc/ssl/private.key
#
#    restart: unless-stopped
#    depends_on:
#      - back
#    networks:
#      - jenkins-network


 

  # backend-cud:
  #   container_name: backend-cud
  #   image: junwon1131/s208-backend-cud:latest
  #   build:
  #     context: ./backend-cud
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - jenkins-network
 


  # backend-read:
  #   container_name: backend-read
  #   image: junwon1131/s208-backend-read:latest
  #   build:
  #     context: ./backend-read
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   ports:
  #     - "8082:8080"
  #   networks:
  #     - jenkins-network
       
networks:
  jenkins-network:
    external: true


volumes:
  jenkins_home:
  prometheus_data:
  grafana_data:
  secrets:
